// requires hexical

// 1. attack unit
// #my_aim,raycast/entity
( pop,comment_single-attack
  (stack_len,last_n_list,pop,(mask_v-v-v)splat,duplicate,entity_pos/eye,brainsweep)
  swap,num_4,swap,replace
  get_caster,entity_pos/foot,swap,conjure_hextito
  get_caster,entity_pos/foot,get_entity/item
  sleight,mage_mouth)
over,health,ceil,(800)splat,2dup,less,rotate_reverse,if
duplicate,duplicate,duplicate_n,last_n_list
for_each,mask_vv

// 2. cone attacking version
get_caster,entity_pos/foot,duplicate
#is_sneaking,\[\31,zone_entity/not_player,swap
  \31,zone_entity/living,and]
\[\31,zone_entity/animal,swap
  \31,zone_entity/monster,or]if,eval
(// calculate cos(angle)=norm(vec_delta)*look_vec
  duplicate,entity_pos/eye
  get_caster,entity_pos/eye,sub
  duplicate,abs_len,div_cross
  get_caster,get_entity_look,mul_dot
  num_0.5,less,(pop)
  // attacker
  (( pop,comment_single-attack
    (stack_len,last_n_list,pop,(mask_v-v-v)splat,duplicate,entity_pos/eye,brainsweep)
    swap,num_4,swap,replace
    get_caster,entity_pos/foot,swap,conjure_hextito
    get_caster,entity_pos/foot,get_entity/item
    sleight,mage_mouth)
  over,health,ceil,(800)splat,2dup,less,rotate_reverse,if
  duplicate,duplicate,duplicate_n,last_n_list
  for_each,mask_vv),if,eval
)swap,for_each,pop
// pick items, exp orbs and minecarts (wtf
get_caster,entity_pos/foot,duplicate
\31,zone_entity/item,swap
\type/entity_experience_orb,swap,\31,zone_entity/type,add
\gate_self_0_1.5,swap
(
  // same calc cos(angle)
  duplicate,entity_pos/eye
  get_caster,entity_pos/eye,sub
  duplicate,abs_len,div_cross
  get_caster,get_entity_look,mul_dot
  num_0.5,less,(pop)(gate/mark)if,eval
),swap,for_each,pop
gate/close
