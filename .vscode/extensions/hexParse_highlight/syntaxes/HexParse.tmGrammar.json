{
    "scopeName": "source.HexParse",
    "patterns": [
        {
            "include": "#expression"
        }
    ],
    "repository": {
        "expression": {
            "patterns": [
                {
                    "match": "\\/\\/.*",
                    "name": "comment"
                },
                {
                    "begin": "\\/\\*",
                    "end": "\\*\\/",
                    "beginCaptures": {
                        "0": {
                            "name": "comment.paren.open"
                        }
                    },
                    "endCaptures": {
                        "0": {
                            "name": "comment.paren.close"
                        }
                    },
                    "name": "comment.multiline"
                },
                {
                    "match": "comment_.*?(?=\\s|$)",
                    "name": "comment.iota"
                },
                {
                    "match": "tab(_.*?(?=\\s|$))?",
                    "name": "comment.iota.tab"
                },
                {
                    "match": "num(_[0-9e.\\-]+)?",
                    "name": "num.pattern"
                },
                {
                    "match": "[0-9.\\-]+(e[0-9.\\-]+)?",
                    "name": "num"
                },
                {
                    "match": "vec(_[0-9e.\\-]+){0,3}",
                    "name": "vec"
                },
                {
                    "begin": "\\(|\\[",
                    "end": "\\)|\\]",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.paren.open"
                        }
                    },
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.paren.close"
                        }
                    },
                    "name": "expression.group",
                    "patterns": [
                        {
                            "include": "#expression"
                        }
                    ]
                },
                {
                    "match": "\\\\|escape",
                    "name": "string.escape"
                },
                {
                    "include": "#pattern"
                }
            ]
        },
        "pattern": {
            "match": "\\\\|[\\w\\.\\/\\-\\:]+",
            "name": "keyword.pattern"
        }
    }
}